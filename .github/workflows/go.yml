name: Go

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: sudo ./build.sh

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $${{ steps.get_version.outputs.VERSION }}
        release_name: ${{ steps.get_version.outputs.VERSION }}
        prerelease: true

    - name: Upload Release Artifact Linux amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cirrus-_linux-amd64.zip
        asset_name: cirrus-linux-amd64.zip
        asset_content_type: application/zip

    - name: Upload Release Artifact Linux i386
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cirrus-_linux-i386.zip
        asset_name: cirrus-linux-i386.zip
        asset_content_type: application/zip

    - name: Upload Release Artifact OSX amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cirrus-_osx-amd64.zip
        asset_name: cirrus-osx-amd64.zip
        asset_content_type: application/zip

    - name: Upload Release Artifact OSX i386
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cirrus-_osx-i386.zip
        asset_name: cirrus-osx-i386.zip
        asset_content_type: application/zip

    - name: Upload Release Artifact Windows amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cirrus-_windows-amd64.zip
        asset_name: cirrus-win-amd64.zip
        asset_content_type: application/zip

    - name: Upload Release Artifact Windows i386
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cirrus-_windows-i386.zip
        asset_name: cirrus-win-i386.zip
        asset_content_type: application/zip